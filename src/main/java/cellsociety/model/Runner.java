package cellsociety.model;

import cellsociety.model.core.Cell;
import cellsociety.model.neighborhood.AdjacentNeighborhood;
import cellsociety.model.neighborhood.CardinalNeighborhood;
import cellsociety.model.simulation.FireSimulation;
import cellsociety.model.simulation.Simulation;
import cellsociety.model.simulation.WatorSimulation;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Runner {

  public static void main(String[] args) {
    /**
     Integer[] arr = {0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,1,0,0,0,0,0,0,0,0,0,
     1,0,1,0,0,0,0,0,0,0,0,0,
     0,1,1,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,0,0,0,0,0};
     */
/**
    Integer[] arr = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,
        1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0};

    // fire test
    */
    /**
     Integer[] arr = {1, 2, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2,
     0, 0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 2,
     2, 2, 0, 2, 0, 0, 2, 2, 2, 2, 2, 2,
     2, 0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2,
     0, 2, 0, 0, 2, 0, 0, 2, 2, 2, 2, 2,
     2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,
     2, 0, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2,
     0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2,
     2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2,
     0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
     0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2,
     0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2};

     percolation test
     */

    /**
     Integer[] arr = {
     1,2,0,2,2,2,0,0,0,2,0,1,0,2,1,2,1,1,2,2,2,2,1,0,1,1,2,0,2,0,1,1,1,0,1,0,1,1,1,0,1,2,2,0,0,1,2,1,0,0,0,1,1,2,2,1,1,2,0,0,2,0,2,1,1,1,2,2,1,0,0,0,2,1,0,0,0,1,0,2,2,1,1,2,2,1,1,0,2,0,2,2,0,2,2,2,0,0,2,1,2,2,2,2,0,0,1,2,0,0,2,1,0,1,0,0,2,0,1,2,2,2,0,2,1,0,1,0,0,2,1,2,0,0,0,2,1,0,2,1,2,0,2,1,1,2,1,1,0,2,2,0,2,1,1,2,2,0,0,1,2,2,1,2,0,1,0,1,2,1,1,1,0,0,1,2,2,0,1,2,0,0,2,0,1,0,1,1,0,2,2,0,2,1,1,2,1,0,1,2,2,2,0,0,0,2,2,0,1,1,2,0,2,0,1,2,2,2,0,2,2,2,1,2,2,1,2,1,0,0,0,2,0,0,0,2,1,2,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,2,2,2,2,1,1,0,2,1,2,2,0,1,1,1,1,1,1,2,1,1,0,1,0,0,0,2,1,2,2,2,1,2,2,2,0,1,1,1,0,0,2,0,2,0,1,0,0,1,2,1,0,2,2,2,2,2,1,1,0,2,0,1,2,1,1,1,1,2,0,2,0,1,1,0,1,0,0,0,1,0,1,2,2,0,1,2,0,0,2,2,2,0,0,2,2,0,1,2,2,2,0,1,2,0,2,1,2,1,0,2,0,0,1,0,0,0,0,1,1,1,0,0,2,0,2,0,2,2,2,0,0,2,2,1,1,2,2,0,0,2,2,0,0,1,2,0,2,0,2,2,0,0,2,0,2,1,0,2,0,0,2,0,2,1,0,2,2,2,2,0,0,0,0,1,2,0,1,2,2,1,2,1,2,0,0,0,2,1,2,0,2,2,2,0,0,0,1,0,0,0,2,0,2,1,2,2,2,2,1,0,1,2,2,1,1,0,2,1,1,0,0,1,2,0,0,1,2,1,1,2,2,2,1,0,1,2,0,0,0,2,2,1,2,1,0,2,2,1,0,0,1,1,1,0,0,2,1,1,1,1,1,0,1,2,2,1,0,0,0,1,2,1,2,2,0,1,0,0,2,0,0,0,1,2,2,2,0,2,1,2,2,0,1,1,2,0,1,2,2,1,0,2,2,2,1,2,2,1,1,0,1,0,2,2,0,0,1,0,0,2,2,2,0,1,0,1,1,2,2,2,2,2,2,2,2,2,2,0,0,1,0,0,1,1,2,2,1,1,2,0,2,2,1,0,1,1,2,2,2,0,2,0,2,1,1,1,0,2,0,2,2,1,2,1,2,1,2,1,2,2,2,2,2,1,0,0,0,1,2,2,0,0,1,1,2,2,0,2,2,0,0,2,0,2,2,1,0,2,2,1,2,2,2,0,2,0,0,2,2,2,2,1,0,1,0,1,2,1,2,1,2,1,1,1,2,1,1,2,1,0,2,0,2,0,0,0,2,2,0,2,2,0,1,0,2,1,2,2,2,1,2,2,0,1,1,2,0,2,1,1,0,1,2,1,1,0,1,2,0,1,2,0,1,2,1,1,1,1,1,0,2,0,2,0,0,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,0,0,0,1,0,1,0,2,2,2,1,2,0,2,0,1,1,0,0,2,1,1,1,1,1,2,1,0,1,1,2,1,0,1,1,2,1,1,1,1,0,1,1,1,1,2,1,1,0,0,0,1,0,1,0,1,0,2,0,0,1,2,2,2,1,0,0,2,1,1,2,0,2,2,2,2,0,2,2,0,0,2,2,2,0,2,2,2,2,1,2,1,2,2,1,1,1,1,2,0,0,2,1,1,1,2,0,2,0,0,0,0,0,1,1,1,0,2,2,0,0,0,2,0,0,2,2,1,0,0,0,0,2,1,2,0,2,0,0,1,0,0,0,1,0,2,2,2,2,2,2,2,1,1,2,2,1,0,2,2,2,2,0,0,2,2,1,2,0,1,1,2,0,1,1,0,1,0,0,0,1,2,2,1,2,2,0,1,1,0,2,0,0,0,2,1,0,0,0,1,1,2,1,1,1,2,1,0,1,2,1,0,0,1,0,0,2,0,0,0,2,1,0,2,0,1,1,1,2,1,2,2,2,2,2,2,1,1,2,0,2,2,1,1,0,1,1,1,2,2,2,0,2,0,2,1,1,1,0,2,1,0,0,1,2,1,1,1,2,0,1,1,2,2,1,2,1,1,0,0,0,0,1,0,2,2,1,2,2,2,1,0,2,1,2,0,2,2,1,0,2,0,2,2,1,1,1,1,2,0,2,2,1,1,0,0,1,1,2,2,0,0,2,0,2,0,0,0,0,2,1,0,0,1,1,0,0,0,0,2,0,2,1,1,0,2,2,2,0,1,0,1,0,0,1,2,0,0,1,2,1,2,0,1,1,2,1,1,0,1,2,1,2,2,0,2,2,0,0,1,0,1,0,2,1,0,0,1,0,2,0,2,0,0,1,2,0,2,0,2,0,2,0,1,2,0,2,1,0,0,2,1,0,2,1,2,2,2,2,1,2,2,0,2,1,2,2,1,0,2,0,2,1,2,1,1,0,0,1,2,0,0,0,0,2,1,2,2,0,0,0,0,0,2,0,2,2,1,1,2,1,2,2,0,2,1,1,0,1,2,1,0,0,2,2,0,2,0,2,2,0,1,0,0,0,0,2,2,0,1,0,2,0,2,2,2,1,1,0,2,2,1,2,0,2,2,1,2,1,2,0,1,0,1,1,0,2,0,1,1,0,2,1,2,2,0,2,1,0,0,2,0,2,1,1,1,0,1,1,0,0,0,2,0,2,2,1,2,2,2,2,1,2,0,1,1,2,0,0,0,1,1,2,0,1,2,1,1,0,0,2,0,1,1,0,1,2,2,1,2,0,0,1,1,2,1,0,2,2,1,0,0,1,0,0,1,0,2,1,0,0,2,1,2,1,2,1,1,0,2,2,0,1,1,2,2,1,0,1,0,0,1,2,2,2,1,1,1,2,2,0,1,2,1,0,1,0,2,2,1,0,2,1,2,2,1,0,2,1,1,1,1,1,1,0,2,0,1,0,1,1,1,1,2,1,0,0,1,0,1,2,1,2,1,0,0,1,2,1,2,2,1,2,2,2,2,1,1,0,0,0,2,1,2,1,0,1,0,1,0,0,0,1,2,0,2,1,2,0,1,1,1,0,1,1,0,0,1,0,2,1,1,0,0,0,2,2,1,1,0,1,2,0,2,1,0,2,1,0,0,1,0,1,2,2,0,2,2,2,0,1,1,0,2,2,0,2,0,0,2,2,1,1,0,0,1,2,0,2,1,2,1,1,0,1,1,2,2,0,2,0,2,0,1,1,1,1,1,0,0,0,0,2,1,0,2,2,2,1,1,0,0,1,2,1,2,0,0,1,1,1,0,2,1,0,0,0,2,0,1,1,0,0,0,0,1,0,0,2,2,1,0,2,0,0,1,1,0,1,1,0,2,2,1,2,0,0,2,2,0,0,1,0,1,2,0,0,2,0,1,0,0,1,0,2,1,0,2,1,0,1,2,2,2,2,0,0,2,1,1,2,0,1,1,0,2,1,0,1,0,0,2,2,0,2,0,2,0,2,2,2,2,1,2,1,2,1,0,1,1,1,2,1,1,2,0,2,0,2,2,0,2,0,1,0,2,2,2,0,1,1,0,1,2,2,2,1,0,1,2,0,1,0,0,1,2,0,0,1,2,1,1,1,0,0,0,0,1,1,2,2,1,0,0,1,0,2,2,1,2,2,1,1,0,2,0,0,0,1,1,2,2,1,1,0,0,2,2,0,2,0,1,2,0,2,0,2,2,0,2,2,2,2,2,1,1,2,1,1,1,1,1,2,2,0,2,2,0,1,0,0,1,2,1,2,2,2,2,2,2,0,0,2,0,0,2,2,2,0,2,0,1,1,1,0,0,2,1,0,2,1,2,2,2,1,2,1,1,0,1,1,1,0,0,1,0,2,0,0,1,0,1,1,0,1,1,2,2,2,1,2,1,2,2,0,1,0,1,1,1,2,1,2,0,0,1,1,0,2,0,2,2,1,0,1,1,0,1,2,2,2,2,2,2,0,0,1,0,2,2,1,2,1,0,0,1,1,1,2,0,1,2,1,1,2,0,1,1,2,0,0,0,0,0,1,2,2,0,1,2,1,1,2,2,2,2,0,2,2,1,1,2,1,2,0,2,1,0,0,0,2,0,2,1,0,0,1,1,1,0,1,0,0,0,2,1,1,2,2,2,0,1,2,0,0,0,2,0,0,2,1,0,0,1,2,0,2,0,1,0,2,0,1,0,2,1,2,0,0,2,0,1,1,1,1,1,2,2,0,0,2,1,0,1,2,2,2,1,1,2,1,0,1,2,1,0,2,1,1,1,1,2,0,0,1,2,1,2,0,1,0,0,0,1,1,1,0,1,2,1,2,1,1,0,0,1,2,1,1,1,0,1,1,1,1,2,1,0,2,0,1,2,1,0,0,1,0,2,2,2,2,2,2,1,2,0,2,2,1,1,0,0,1,0,1,2,0,0,0,1,1,0,0,0,0,1,0,1,2,1,1,0,0,2,0,2,1,1,1,2,0,0,2,2,0,0,1,1,2,2,1,0,2,0,1,0,0,2,1,1,0,1,0,2,2,1,0,2,0,0,1,0,0,1,2,2,0,0,0,0,0,2,0,1,2,1,2,1,0,1,0,1,1,1,2,0,0,2,1,2,1,0,0,0,2,1,2,1,0,1,1,1,2,2,2,0,0,2,1,1,1,1,2,0,2,0,1,2,0,0,2,2,2,0,0,2,2,0,1,2,1,0,0,2,1,1,2,1,1,1,1,2,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,1,2,2,2,2,1,1,0,2,1,2,2,0,2,0,0,0,2,0,2,0,1,0,2,2,2,1,2,2,1,0,2,0,1,0,2,0,2,1,2,0,1,2,0,1,0,2,1,0,1,2,1,0,0,2,2,1,1,0,2,0,1,0,2,1,2,1,2,0,0,0,1,0,0,0,0,2,0,2,2,1,2,1,1,2,2,0,0,2,1,2,0,0,2,1,1,2,1,2,2,0,1,2,1,0,2,0,2,2,1,1,2,0,0,2,2,1,0,1,0,1,0,0,1,0,1,1,2,1,1,1,2,1,2,0,1,2,1,2,0,2,0,2,2,1,0,0,1,2,2,2,2,1,2,1,0,1,1,0,1,2,2,2,1,2,2,0,2,2,1,0,1,0,0,0,1,2,2,0,0,1,1,1,1,1,0,2,2,1,2,1,2,2,0,1,0,1,0,0,1,2,0,2,2,0,0,1,2,0,0,2,2,0,0,0,2,1,0,1,2,0,1,1,0,2,2,0,0,1,1,2,1,0,1,1,1,2,0,0,2,1,2,2,0,1,2,0,1,0,2,2,2,0,2,1,2,1,1,0,1,0,1,0,1,2,0,0,2};

     schelling test
     */

    Integer[] arr = {
        0,0,0,0,0,0,
        1,1,1,0,0,0,
        0,0,0,0,0,0,
        0,2,2,2,0,0,
        0,0,0,0,0,0,
        0,0,0,0,0,0};
    List<Integer> currentConfigToStart = Arrays.asList(arr);
    List<Cell> cellList = new ArrayList<>();
    int x = 0;
    int y = 0;
    int numRows = (int) Math.round(Math.sqrt(arr.length));
    int numCols = (int) Math.round(Math.sqrt(arr.length));
    for (Integer i : currentConfigToStart) {
      cellList.add(new Cell(i, x / numRows, y % numCols));
      if (i == 1) {
      }
      x++;
      y++;
    }
    Simulation s = new WatorSimulation(numRows, numCols, new CardinalNeighborhood(),
        currentConfigToStart);
    for (int i = 0; i < 20; i++) {
      s.transitionFunction();
      s.processUpdate();
      System.out.print("\n\n\n\n");
    }
  }


}
